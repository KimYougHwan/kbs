package kr.co.kbs.distribute.task;

import java.util.regex.Matcher;
import java.util.regex.Pattern;

import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.core.env.Environment;
import org.springframework.stereotype.Component;

import ch.qos.logback.classic.Logger;
import kr.co.kbs.distribute.common.util.CastUtil;
import kr.co.kbs.distribute.mapper.schedule.ScheduleDataMapper;
import kr.co.kbs.distribute.schedule.service.ScheduleDataService;


@Component("scheduleTempLGPPVBean")
//@Component
public class SampleExcelForLgPPVInsert {
	
	private static final Logger logger = (Logger) LoggerFactory.getLogger(SampleExcelForLgPPVInsert.class);
	
	@Autowired 
	private ScheduleDataMapper mapper;
	
	@Autowired 
	private ScheduleDataService service;
	
//	public static void main(String[] args) throws IOException {
//		
//		SampleExcelForCVODInsert task = new SampleExcelForCVODInsert();
//		task.requestAliveSelect();
//	}
	
	@Autowired
	private Environment env;
	
//	@Scheduled(cron="40 10 14 * * *") 
	public void requestAliveSelect() {
		int totalCount = 0;
		int lProesult =0;
		int tapGubun= 0; //0:KBSPPM,1:MBCPPM,2:SBSPPM,3:KBSPPV
		
		String rootDir ="/usr/local/tomcat/apache-tomcat-8.5.23/";
//		String rootDir ="D:\\KBS\\excel\\LG\\";
//		String[] fileNameArray= {
////				"/usr/local/tomcat/apache-tomcat-8.5.23/webapps/TV_VOD/201710/171002-171008/LG/KBS_PPM_20171015.xlsx",
////				"/usr/local/tomcat/apache-tomcat-8.5.23/webapps/TV_VOD/201710/171002-171008/LG/KBS_PPV_20171015.xlsx",
//				"/usr/local/tomcat/apache-tomcat-8.5.23/webapps/TV_VOD/201710/171009-171015/LG/MBC_PPM_20171015.xlsx",
//				"/usr/local/tomcat/apache-tomcat-8.5.23/webapps/TV_VOD/201710/171009-171015/LG/SBS_PPM_20171015.xlsx",
////				"/usr/local/tomcat/apache-tomcat-8.5.23/webapps/TV_VOD/201710/171016-171022/LG/KBS_PPM_20171022.xlsx",
////				"/usr/local/tomcat/apache-tomcat-8.5.23/webapps/TV_VOD/201710/171016-171022/LG/KBS_PPV_20171022.xlsx",
////				"/usr/local/tomcat/apache-tomcat-8.5.23/webapps/TV_VOD/201710/171023-171029/LG/KBS_PPM_20171029.xlsx",
////				"/usr/local/tomcat/apache-tomcat-8.5.23/webapps/TV_VOD/201710/171023-171029/LG/KBS_PPV_20171029.xlsx",
////				"/usr/local/tomcat/apache-tomcat-8.5.23/webapps/TV_VOD/201710/171030-171105/LG/KBS_PPM_20171105.xlsx",
////				"/usr/local/tomcat/apache-tomcat-8.5.23/webapps/TV_VOD/201710/171030-171105/LG/KBS_PPV_20171105.xlsx"
//		};
		String[] fileNameArray= {
//				"LG_PPM_use.xlsx","LG_PPV_use.xlsx","LG_MBC_PPM_use.xlsx","LG_SBS_PPM_use.xlsx"
//				"/usr/local/tomcat/apache-tomcat-8.5.23/webapps/TV_VOD/201710/171002-171008/LG/MBC_PPM_20171015.xlsx",
//				"/usr/local/tomcat/apache-tomcat-8.5.23/webapps/TV_VOD/201710/171002-171008/LG/SBS_PPM_20171015.xlsx",
//				"/usr/local/tomcat/apache-tomcat-8.5.23/webapps/TV_VOD/201710/171002-171008/LG/333.xlsx",
//				"/usr/local/tomcat/apache-tomcat-8.5.23/webapps/TV_VOD/201710/171002-171008/LG/444.xlsx",
				"/usr/local/tomcat/apache-tomcat-8.5.23/webapps/TV_VOD/201710/171009-171015/LG/KBS_PPM_20171015.xlsx",
				"/usr/local/tomcat/apache-tomcat-8.5.23/webapps/TV_VOD/201710/171009-171015/LG/KBS_PPV_20171015.xlsx",
				"/usr/local/tomcat/apache-tomcat-8.5.23/webapps/TV_VOD/201710/171009-171015/LG/MBC_PPM_20171015.xlsx",
				"/usr/local/tomcat/apache-tomcat-8.5.23/webapps/TV_VOD/201710/171009-171015/LG/SBS_PPM_20171015.xlsx",
////				"/usr/local/tomcat/apache-tomcat-8.5.23/webapps/TV_VOD/201710/171009-171015/LG/333.xlsx",
////				"/usr/local/tomcat/apache-tomcat-8.5.23/webapps/TV_VOD/201710/171009-171015/LG/444.xlsx",
				"/usr/local/tomcat/apache-tomcat-8.5.23/webapps/TV_VOD/201710/171016-171022/LG/KBS_PPM_20171022.xlsx",
				"/usr/local/tomcat/apache-tomcat-8.5.23/webapps/TV_VOD/201710/171016-171022/LG/KBS_PPV_20171022.xlsx",
				"/usr/local/tomcat/apache-tomcat-8.5.23/webapps/TV_VOD/201710/171016-171022/LG/MBC_PPM_20171022.xlsx",
				"/usr/local/tomcat/apache-tomcat-8.5.23/webapps/TV_VOD/201710/171016-171022/LG/SBS_PPM_20171022.xlsx",
//				"/usr/local/tomcat/apache-tomcat-8.5.23/webapps/TV_VOD/201710/171016-171022/LG/333.xlsx",
//				"/usr/local/tomcat/apache-tomcat-8.5.23/webapps/TV_VOD/201710/171016-171022/LG/444.xlsx",
				"/usr/local/tomcat/apache-tomcat-8.5.23/webapps/TV_VOD/201710/171023-171029/LG/KBS_PPM_20171029.xlsx",
				"/usr/local/tomcat/apache-tomcat-8.5.23/webapps/TV_VOD/201710/171023-171029/LG/KBS_PPV_20171029.xlsx",
				"/usr/local/tomcat/apache-tomcat-8.5.23/webapps/TV_VOD/201710/171023-171029/LG/MBC_PPM_20171029.xlsx",
				"/usr/local/tomcat/apache-tomcat-8.5.23/webapps/TV_VOD/201710/171023-171029/LG/SBS_PPM_20171029.xlsx",
//				"/usr/local/tomcat/apache-tomcat-8.5.23/webapps/TV_VOD/201710/171023-171029/LG/333.xlsx",
//				"/usr/local/tomcat/apache-tomcat-8.5.23/webapps/TV_VOD/201710/171023-171029/LG/444.xlsx",
//				"/usr/local/tomcat/apache-tomcat-8.5.23/webapps/TV_VOD/201710/171030-171105/LG/111.xlsx",
//				"/usr/local/tomcat/apache-tomcat-8.5.23/webapps/TV_VOD/201710/171030-171105/LG/222.xlsx",
				"/usr/local/tomcat/apache-tomcat-8.5.23/webapps/TV_VOD/201710/171030-171105/LG/KBS_PPM_20171105.xlsx",
				"/usr/local/tomcat/apache-tomcat-8.5.23/webapps/TV_VOD/201710/171030-171105/LG/KBS_PPV_20171105.xlsx",
				"/usr/local/tomcat/apache-tomcat-8.5.23/webapps/TV_VOD/201710/171030-171105/LG/MBC_PPM_20171105.xlsx",
				"/usr/local/tomcat/apache-tomcat-8.5.23/webapps/TV_VOD/201710/171030-171105/LG/SBS_PPM_20171105.xlsx"
		};
		
		
//		String[] fileNameArray= {
////				
//				"E:/00.project/00.2017/16.KBS_유통정보시스템/00.받은파일/20171201/KBS데이터_20171201/TV_VOD/201710_SK/171016-171022/LG/SBS PPM 시청+통계_20171022.xlsx"
////				"/usr/local/tomcat/apache-tomcat-8.5.23/webapps/TV_VOD/201710/171016-171022/LG/222.xlsx",
////				"/usr/local/tomcat/apache-tomcat-8.5.23/webapps/TV_VOD/201710/171016-171022/LG/333.xlsx",
////				"/usr/local/tomcat/apache-tomcat-8.5.23/webapps/TV_VOD/201710/171016-171022/LG/444.xlsx",
////				"/usr/local/tomcat/apache-tomcat-8.5.23/webapps/TV_VOD/201710/171023-171029/LG/111.xlsx",
////				"/usr/local/tomcat/apache-tomcat-8.5.23/webapps/TV_VOD/201710/171023-171029/LG/222.xlsx",
////				"/usr/local/tomcat/apache-tomcat-8.5.23/webapps/TV_VOD/201710/171023-171029/LG/333.xlsx",
////				"/usr/local/tomcat/apache-tomcat-8.5.23/webapps/TV_VOD/201710/171023-171029/LG/444.xlsx",
////				"/usr/local/tomcat/apache-tomcat-8.5.23/webapps/TV_VOD/201710/171030-171105/LG/111.xlsx",
////				"/usr/local/tomcat/apache-tomcat-8.5.23/webapps/TV_VOD/201710/171030-171105/LG/222.xlsx",
////				"/usr/local/tomcat/apache-tomcat-8.5.23/webapps/TV_VOD/201710/171030-171105/LG/333.xlsx",
////				"/usr/local/tomcat/apache-tomcat-8.5.23/webapps/TV_VOD/201710/171030-171105/LG/444.xlsx"
//		};
//		
		String[] channelNameArray= {
//				"LG_PPM_use.xlsx","LG_PPV_use.xlsx","LG_MBC_PPM_use.xlsx","LG_SBS_PPM_use.xlsx"
//				"SBS",
				"KBS",
				"KBS",
				"MBC",
				"SBS",
				"KBS",
				"KBS",
				"MBC",
				"SBS",
				"KBS",
				"KBS",
				"MBC",
				"SBS",
				"KBS",
				"KBS",
				"MBC",
				"SBS"
//				
		};
				
		tapGubun =CastUtil.toInt(env.getProperty("kbsapi.tapGubun")); 
		try {
			for(int fiCnt=0;fiCnt<fileNameArray.length;fiCnt++) {
				service.LGPPMTask(fileNameArray[fiCnt], channelNameArray[fiCnt]);
			
//			ExcelToJsonConverterConfig config = new ExcelToJsonConverterConfig();
//			config.setSourceFile(fileNameArray[fiCnt]);
////			config.setSourceFile(rootDir+fileNameArray[fiCnt]);
////			config.setSourceFile("/usr/local/tomcat/apache-tomcat-8.5.23/kt_sell.xlsx");
//			StringBuffer sb = new StringBuffer();
//			StringBuffer errsb = new StringBuffer();
//			String valid = config.valid();
//			if(valid!=null) {
//				logger.error(valid);
//				return;
//			}
//
//			ExcelToJsonConverter convert = new ExcelToJsonConverter(config);
//			ExcelWorkbook book = convert.convert();
//			String jsonStr = book.toJson(config.isPretty());
//			logger.debug("jsonlength:"+jsonStr.length());
//			
//			logger.debug(jsonStr.substring(0, 200));
//			JSONParser parser = new JSONParser();
//			Object obj = parser.parse(jsonStr);
//			JSONObject jsonObj = (JSONObject) obj;
//			logger.debug("size:"+jsonObj.size());
//
//			JSONArray bookInfoArray = (JSONArray) jsonObj.get("sheets");
//
//			logger.debug("array-size: "+bookInfoArray.size());
//			JSONObject jsonObj2 = (JSONObject) bookInfoArray.get(0);
//
//			JSONArray bookInfoArray2 = (JSONArray) jsonObj2.get("data");
//
//			logger.debug("array2-size: "+bookInfoArray2.size());
//			float validCnt =0;
//			JSONArray arrayObj = null;
//			for(int i=1;i<bookInfoArray2.size();i++) {
//
//				arrayObj = (JSONArray) bookInfoArray2.get(i);
//				String titleStr ="";
//				String dateStr ="";
//				String orgStr = "";
//				String replaceStr ="";
//				
//				String vodStr ="";
//				String screenType="";
//				String chargeYn="";
//				String amount="";
//				String joinCnt="";
//				String chargeCnt="";
//				String onairStr="";
//				String proType="";
//				for(int j=0;j<arrayObj.size();j++) {
//					if(j==0) {
////						dateStr="";
////						dateStr = getRexStr(ObjectUtils.toString(arrayObj.get(j), ""),"[0-9]{1,2}\\/[0-9]{1,2}|[0-9]{1,}회$|[0-9]{1,}회$|[0-9]{1,}회 |[0-9]{1,3}화$|[0-9]{1,3}화 |[0-9]{1,}부$|[0-9]{6,}|[0-9-]{10,}|[0-9]{1,2}").trim(); //
////						//sb.append(ObjectUtils.toString(arrayObj.get(j),"")+":["+i+"]["+j+"]["+dateStr+"]\r\n");
////						
//						titleStr ="";
//						orgStr = ObjectUtils.toString(arrayObj.get(j),"");
////						replaceStr = getRexStr(orgStr,"^TV 다시보기_[A-Z]{1,3}|^TV 다시보기_[a-zA-Z가-힣\\d-_\\s\\Q[a-zA-Z가-힣]\\E]{12,}\\[[가-힣]{1}\\]|^지상파_[a-zA-Z\\d-_\\s]{1,9}|^지상파_[a-zA-Z\\d-_\\s]{1,9}|^지상파_|^KBS_[0-9/]{5,}\\s\\[[가-힣]{1}\\]|^KBS_[0-9-]{10,}\\s\\[[가-힣]{1}\\]\\s|^KBS_[0-9]{1,}\\[[가-힣]{1}\\]|^KBS_\\[HD\\]\\s[0-9]{6,}\\[[가-힣]{1}\\]|^KBS_\\[HD\\]\\s[0-9/]{5,}\\s\\[[가-힣]\\]|^KBS_\\[HD\\]\\s[0-9]{1,}\\Q[a-zA-Z가-힣]\\E]|^KBS_[0-9]{1,}_|_[0-9]{1,3}화$|TV다시보기_[A-Z]{1,3}[0-9]{1,6}|^TV 다시보기_[A-Z]{1,3}\\s[0-9]{6}\\s\\[[가-힣]{1}\\]|^TV 다시보기_[A-Z]{1,3}[0-9]{6}\\[[가-힣]{1}\\]|TV다시보기_[0-9]{1,}\\[[가-힣]{1}\\]");
////						titleStr = orgStr.replace(replaceStr, "").replace("지상파_", "").replace("TV 다시보기_", "").replace(dateStr, "").replace("_1", "").replace("[HD]", "").replace("KBS_", "").replaceAll("[_]$", "").trim();
//						replaceStr  = getRexStr(orgStr,"^[0-9]{1,}\\/[0-9]{1,}\\([가-힣]{1}\\)|^[0-9]{1,}회\\s\\s[0-9]{1,}\\/[0-9]{1,}\\([가-힣]{1}\\)|^[0-9]{1,}회\\s[0-9]{1,}\\/[0-9]{1,}\\([가-힣]{1}\\)|^[0-9]{1,}회\\s");
//						titleStr = orgStr.replace(replaceStr, "").trim();
//						vodStr = getRexStr(orgStr,"^[0-9]{1,}회");
//						//sb.append("\t\t:["+i+"]["+j+"]:["+titleStr+"]\r\n");
//					}
//					
//					if(j==1) {
//						onairStr = ObjectUtils.toString(arrayObj.get(j),"");
//					}
//					if(j==2) {
//						proType = ObjectUtils.toString(arrayObj.get(j),""); //PPM,PPV
//					}
//					
//					if(j==3) {
//						dateStr = ObjectUtils.toString(arrayObj.get(j),"");
//					}
//					
//					if(j==4) {
//						joinCnt = ObjectUtils.toString(arrayObj.get(j),"");
//					}
//					
//					if(j==5) {
//						chargeCnt = ObjectUtils.toString(arrayObj.get(j),"");
//					}
//				}
//				
//				if(titleStr.length()>0&&dateStr.length()>0) {
//					DataVo dVo = new DataVo();
//					dVo.setProgramNm(CastUtil.StringReplace(titleStr));
//					dVo.setVodcnt(vodStr);
//					dVo.setBroadDate(onairStr);
//					String programId ="";
//					String contentsId ="";
//					
////					programId = mapper.selectGetProgramId(dVo);
////					contentsId = mapper.selectGetContentsId(dVo);
//					DataVo reciveVo = mapper.selectGetContentsId(dVo);
//					
//					if(reciveVo!=null) {
//						validCnt++;
//						
//						logger.debug("end-validCnt:"+(validCnt)+":[cnt]:"+i+":"+lProesult);
//						
//						UseStatProVo uspVo = new UseStatProVo();
//						uspVo.setPcSeq(CastUtil.toInt(reciveVo.getPcSeq()));
//						uspVo.setPSeq(CastUtil.toInt(reciveVo.getPSeq()));
//						uspVo.setProType(proType);
//						uspVo.setComNm("LG");
//						uspVo.setChargeYn("Y");
//						
//						uspVo.setChargeCnt(chargeCnt);
//						uspVo.setJoinCnt(joinCnt);
//						uspVo.setViewDate(dateStr);
//						uspVo.setInputId("SYSTEM");
//						uspVo.setChannelId(channelNameArray[fiCnt]);
//						uspVo.setTempData(orgStr+"|"+titleStr+"|"+dateStr);
//						if(mapper.selectUseStatProgram(uspVo)>0){
//							lProesult += mapper.updateUseStatProgram(uspVo);
//						}else {
//							lProesult += mapper.insertUseStatProgram(uspVo);
//						}
//						sb.append("["+orgStr+"]:["+replaceStr+"]:["+titleStr+"]:["+dateStr+"]:["+programId+"]:["+contentsId+"]\r\n");
//					}else {
//						
//						UseStatProVo uspVo = new UseStatProVo();
//						uspVo.setPcSeq(-1);
//						uspVo.setPSeq(-1);
//						uspVo.setProType(proType);
//						uspVo.setComNm("LG");
//						uspVo.setChargeYn("Y");
//						
//						uspVo.setChargeCnt(chargeCnt);
//						uspVo.setJoinCnt(joinCnt);
//						uspVo.setViewDate(dateStr);
//						uspVo.setInputId("SYSTEM");
//						uspVo.setChannelId(channelNameArray[fiCnt]);
//						uspVo.setTempData(orgStr+"|"+titleStr+"|"+dateStr);
//						lProesult += mapper.insertUseStatProgram(uspVo);
//						errsb.append("["+orgStr+"]:["+replaceStr+"]:["+titleStr+"]:["+dateStr+"]\r\n");
//					}
//					
//				}else {
//					if(vodStr.indexOf("시리즈")>0) {
//						DataVo dVo = new DataVo();
//						dVo.setProgramNm(titleStr);
//						dVo.setVodcnt("1");
//						dVo.setBroadDate(dateStr);
//						String programId ="";
//						String contentsId ="";
//						
////						programId = mapper.selectGetProgramId(dVo);
////						contentsId = mapper.selectGetContentsId(dVo);
////						DataVo reciveVo = mapper.selectGetContentsId(dVo);
////						if(StringUtils.isNoneEmpty(programId)&&StringUtils.isNoneEmpty(contentsId)) {
////						if(reciveVo!=null) {
////							validCnt++;
//						
////							UseStatProVo uspVo = new UseStatProVo();
////							uspVo.setPcSeq(CastUtil.toInt(contentsId));
////							uspVo.setPSeq(CastUtil.toInt(programId));
////							uspVo.setProType("PPV");
////							uspVo.setComNm("KT");
////							if(chargeYn.equals("유료")) {
////								uspVo.setChargeYn("Y");
////							}else {
////								uspVo.setChargeYn("N");
////							}
////							
////							uspVo.setAmount(amount);
//////							uspVo.setTotalAmount(tamount);
////							uspVo.setChargeCnt(chargeCnt);
////	
////							uspVo.setViewDate("20170626");
////							uspVo.setInputId("admin");
////							
////							if(mapper.selectUseStatProgram(uspVo)>0){
////								lProesult += mapper.updateUseStatProgram(uspVo);
////							}else {
////								lProesult += mapper.insertUseStatProgram(uspVo);
////							}
//							
////							sb.append("시리즈:["+orgStr+"]:["+replaceStr+"]:["+titleStr+"]:["+vodStr+"]:["+programId+"]:["+contentsId+"]\r\n");
////						}else {
//							errsb.append("시리즈:["+orgStr+"]:["+replaceStr+"]:["+titleStr+"]:["+vodStr+"]\r\n");
////						}
//					}else{
//						
//						UseStatProVo uspVo = new UseStatProVo();
//						uspVo.setPcSeq(-1);
//						uspVo.setPSeq(-1);
//						uspVo.setProType(proType);
//						uspVo.setComNm("LG");
//						uspVo.setChargeYn("Y");
//						
//						uspVo.setChargeCnt(chargeCnt);
//						uspVo.setJoinCnt(joinCnt);
//						uspVo.setViewDate(dateStr);
//						uspVo.setInputId("SYSTEM");
//						uspVo.setChannelId(channelNameArray[fiCnt]);
//						uspVo.setTempData(orgStr+"|"+titleStr+"|"+dateStr);
//						lProesult += mapper.insertUseStatProgram(uspVo);
//						errsb.append("["+orgStr+"]:["+replaceStr+"]:["+titleStr+"]:["+dateStr+"]:["+vodStr+"]:["+onairStr+"]\r\n");
//						System.out.println(orgStr+":"+replaceStr+":"+titleStr);
//					}
//				}
//			}
			
//			FileUtils.writeStringToFile(new File(rootDir+fileNameArray[fiCnt]+"kbs_kt_sell.txt"), sb.toString(),"UTF-8");
//			FileUtils.writeStringToFile(new File(rootDir+fileNameArray[fiCnt]+"kbs_kt_sell_err.txt"), errsb.toString(),"UTF-8");
			
//			logger.debug("end-validCnt:"+(validCnt)+":"+lProesult);
//			logger.debug("end-size : "+(bookInfoArray2.size()));
//			logger.debug("end:"+(validCnt/bookInfoArray2.size() *100+"%"));
			}
		}catch(Exception ex) {
			System.out.println("error:"+ex.getMessage());
			ex.printStackTrace();
		}
	}
	
	private static String getRexStr(String orgStr, String findRex) {
		Pattern groupPattern = Pattern.compile(findRex); //지상파_인간극장 베스트_내 이름은 산다라박 
		Matcher groupMatcher = groupPattern.matcher(orgStr);
		String retStr ="";
		while(groupMatcher.find()) {
			retStr = groupMatcher.group();  // 정규표현식에 일치한 전체 문자열
			break;
		}
		return retStr;

	}



}
